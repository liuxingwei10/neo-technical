From ee2683a3caa06ab4271030957d1cd572af5fea4f Mon Sep 17 00:00:00 2001
From: Jeff Epler <jepler@unpythonic.net>
Date: Tue, 19 Oct 2010 15:42:32 -0500
Subject: [PATCH] use correct python for modsilent

---
 src/Makefile     |    2 +-
 src/modsilent    |   43 -------------------------------------------
 src/modsilent.py |   43 +++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 44 insertions(+), 44 deletions(-)
 delete mode 100755 src/modsilent
 create mode 100644 src/modsilent.py

diff --git a/src/Makefile b/src/Makefile
index 5c9d2e1..43bcbcc 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -339,7 +339,7 @@ ifeq ($(BUILD_SYS),kbuild)
 
 # '-o $(KERNELDIR)/Module.symvers' silences warnings about that file being missing
 modules:
-	./modsilent $(MAKE) -C $(KERNELDIR) SUBDIRS=`pwd` CC=$(CC) V=0 -o $(KERNELDIR)/Module.symvers modules 
+	$(PYTHON) modsilent.py $(MAKE) -C $(KERNELDIR) SUBDIRS=`pwd` CC=$(CC) V=0 -o $(KERNELDIR)/Module.symvers modules 
 	-cp *$(MODULE_EXT) ../rtlib/
 endif
 
diff --git a/src/modsilent b/src/modsilent
deleted file mode 100755
index 7b8211f..0000000
--- a/src/modsilent
+++ /dev/null
@@ -1,43 +0,0 @@
-#!/usr/bin/python
-
-import re
-import sys
-
-try:
-    import subprocess
-except ImportError:
-    # Older Python versions don't have the subprocess module.  In this case, we
-    # don't filter the warnings.
-    import os
-    os.execvp(sys.argv[1], sys.argv[1:])
-
-undefined_warning = re.compile('WARNING: "(.*?)" \[.*?\] undefined!')
-duplicate_warning = re.compile("WARNING: [^ ]*: '(.*?)' exported twice. Previous.*")
-
-actually_defined = ['sin', 'cos', 'acos', 'atan2', 'fabs', 'ceil', 'pow',
-    'rt_task_wait_period', 'rt_sem_wait', 'rt_sem_delete',
-    'rt_task_init_cpuid', 'rt_set_periodic_mode', 'count2nano',
-    'rt_task_resume', 'rt_release_irq', 'rtf_create', 'rt_sem_init',
-    'rt_request_irq', 'rt_free_timer', 'rt_sem_wait_if',
-    'rt_linux_use_fpu', 'rt_get_cpu_time_ns', 'rt_sem_signal',
-    'rtf_destroy', 'rt_shm_alloc', 'rt_shm_free', 'rt_startup_irq',
-    'stop_rt_timer', 'rtf_put', 'rt_whoami', 'rt_task_suspend',
-    'rt_task_delete', 'rt_printk', 'start_rt_timer', 'rtf_get',
-    'rt_task_make_periodic', 'rt_shutdown_irq', 'rt_get_time',
-    'nano2count']
-
-permitted_duplicates = ['kinematicsType', 'kinematicsForward',
-    'kinematicsInverse']
-
-kbuild = subprocess.Popen(sys.argv[1:], stderr=subprocess.PIPE)
-for line in kbuild.stderr:
-    #print undefined_warning.match(line),  duplicate_warning.match(line), repr(line)[:60]
-    m = undefined_warning.match(line)
-    if m and m.group(1) in actually_defined: continue
-
-    m = duplicate_warning.match(line)
-    if m and m.group(1) in permitted_duplicates: continue
-
-    sys.stderr.write(line)
-
-raise SystemExit, kbuild.wait()
diff --git a/src/modsilent.py b/src/modsilent.py
new file mode 100644
index 0000000..7b8211f
--- /dev/null
+++ b/src/modsilent.py
@@ -0,0 +1,43 @@
+#!/usr/bin/python
+
+import re
+import sys
+
+try:
+    import subprocess
+except ImportError:
+    # Older Python versions don't have the subprocess module.  In this case, we
+    # don't filter the warnings.
+    import os
+    os.execvp(sys.argv[1], sys.argv[1:])
+
+undefined_warning = re.compile('WARNING: "(.*?)" \[.*?\] undefined!')
+duplicate_warning = re.compile("WARNING: [^ ]*: '(.*?)' exported twice. Previous.*")
+
+actually_defined = ['sin', 'cos', 'acos', 'atan2', 'fabs', 'ceil', 'pow',
+    'rt_task_wait_period', 'rt_sem_wait', 'rt_sem_delete',
+    'rt_task_init_cpuid', 'rt_set_periodic_mode', 'count2nano',
+    'rt_task_resume', 'rt_release_irq', 'rtf_create', 'rt_sem_init',
+    'rt_request_irq', 'rt_free_timer', 'rt_sem_wait_if',
+    'rt_linux_use_fpu', 'rt_get_cpu_time_ns', 'rt_sem_signal',
+    'rtf_destroy', 'rt_shm_alloc', 'rt_shm_free', 'rt_startup_irq',
+    'stop_rt_timer', 'rtf_put', 'rt_whoami', 'rt_task_suspend',
+    'rt_task_delete', 'rt_printk', 'start_rt_timer', 'rtf_get',
+    'rt_task_make_periodic', 'rt_shutdown_irq', 'rt_get_time',
+    'nano2count']
+
+permitted_duplicates = ['kinematicsType', 'kinematicsForward',
+    'kinematicsInverse']
+
+kbuild = subprocess.Popen(sys.argv[1:], stderr=subprocess.PIPE)
+for line in kbuild.stderr:
+    #print undefined_warning.match(line),  duplicate_warning.match(line), repr(line)[:60]
+    m = undefined_warning.match(line)
+    if m and m.group(1) in actually_defined: continue
+
+    m = duplicate_warning.match(line)
+    if m and m.group(1) in permitted_duplicates: continue
+
+    sys.stderr.write(line)
+
+raise SystemExit, kbuild.wait()
-- 
1.7.0.4
